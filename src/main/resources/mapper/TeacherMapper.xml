<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->


<mapper namespace="com.student.mapper.TeacherMapper">



    <!--字段映射-->
    <resultMap id="Map" type="com.student.entity.Teacher">
        <id column="TeacherID" property="id"/>
        <result column="Name" property="name"/>
        <result column="Age" property="age"/>
        <result column="Gender" property="sex"/>
        <result column="Subject" property="subject"/>
        <result column="Password" property="password"/>
    </resultMap>

<!--    根据id修改-->
    <update id="updbyid">

        update teacher
        <set>
            <if test="name != null and name != ''">
                Name = #{name},
            </if>

            <if test="age != null and age != ''">
                Age = #{age},
            </if>

            <if test="sex != null and sex != ''">
                Gender = #{sex},
            </if>

            <if test="subject != null and subject != ''">
                Subject = #{subject},
            </if>

            <if test="password != null and password != ''">
                Password = #{password},
            </if>

        </set>
        where TeacherID = #{id};

    </update>
<!--    删除-->
   <delete id="Del">

        delete
        from teacher
        where TeacherID =
        #{id};


    </delete>

    <!--    批量删除-->
    <delete id="Dels" parameterType="Integer">
        delete
        from teacher
        where TeacherID in
        <foreach item="ids" collection="list" index="index" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>

    <!--    查询所有-->
    <select id="getAll" resultType="com.student.entity.Teacher" resultMap="Map">
        select *
        from teacher
    </select>


    <!--    插入数据-->
    <insert id="addone" parameterType="com.student.entity.Teacher">
        insert into teacher(Name,Age ,Gender,Subject,Password)
        values (#{name},#{age},#{sex},#{subject},SHA2(#{password},256))
    </insert>


    <!--    根据id查询数据-->
    <select id="getOneById" resultMap="Map">
        select *
        from teacher
        where TeacherID = #{id}
    </select>

    <!--    分页查询-->
    <select id="Page" resultMap="Map">

        select TeacherID, Name, Age,Gender,Subject,Password
        from teacher limit #{page},#{pageSize};

    </select>


</mapper>
