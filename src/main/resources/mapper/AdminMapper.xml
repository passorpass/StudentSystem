<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->


<mapper namespace="com.student.mapper.AdminMapper">

    <!--字段映射-->
    <resultMap id="Map" type="com.student.entity.Admin">
        <id column="AdminID" property="id"/>
        <result column="UserName" property="username"/>
        <result column="Age" property="age"/>
        <result column="Gender" property="sex"/>
        <result column="Password" property="password"/>
    </resultMap>

<!--    根据id修改数据-->
    <update id="updbyid">
        update admin
      <set>
          <if test="username != null and username != ''">
              UserName = #{username},
          </if>

          <if test="age != null and age != ''">
              Age = #{age},
          </if>

          <if test="sex != null and sex != ''">
              Gender = #{sex},
          </if>

          <if test="password != null and password != ''">
              Password = #{password},
          </if>
      </set>
        where AdminID = #{id};
    </update>


    <!--    根据id删除-->
    <delete id="adminDel">
        delete
        from admin
        where AdminID = #{id};
    </delete>

    <!--    批量删除-->
    <delete id="adminDels" parameterType="Integer">
        delete
        from admin
        where AdminID in
        <foreach item="ids" collection="list" index="index" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>

    <!--    查询所有-->
    <select id="getAll" resultType="com.student.entity.Admin" resultMap="Map">
        select *
        from admin
    </select>


    <!--    插入数据-->
    <insert id="addone" parameterType="com.student.entity.Admin">
        insert into admin(UserName, Age, Gender, Password)
        values (#{username}, #{age}, #{sex}, SHA2(#{password}, 256))
    </insert>


    <!--查询所有-->
    <select id="getall" resultMap="Map">

        select *
        from admin

    </select>

    <!--    根据id查询数据-->
    <select id="getOneById" resultMap="Map">
        select *
        from admin
        where AdminID = #{id}
    </select>

    <!--    分页查询-->
    <select id="adminPage" resultMap="Map">

        select *
        from admin limit #{page},#{pageSize};

    </select>

<!--    登录根据账号查询-->
    <select id="getByUsername" resultType="com.student.entity.Admin">
        SELECT AdminID, UserName,Age,Gender, Password
        FROM admin
        WHERE UserName = #{username}
    </select>


</mapper>
